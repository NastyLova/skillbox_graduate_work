-- Создание таблиц, индексов, ключей, ограничений
-- в схеме был дубль полей time_create
CREATE TABLE RATING_PASSENGER2DRIVER(
  ID NUMBER GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1) NOT NULL,
  PASSENGER_ID NUMBER NOT NULL,
  DRIVER_ID NUMBER NOT NULL,
  BOOKING_ID NUMBER NOT NULL,
  RATING NUMBER,
  TIME_CREATE TIMESTAMP NOT NULL,
  CONSTRAINT PK_RATING_PASSENGER2DRIVER_ID PRIMARY KEY (ID),
  CONSTRAINT CH_RATING_PASSENGER2DRIVER_RATING CHECK (RATING BETWEEN 1 AND 5)
)
PARTITION BY RANGE (TIME_CREATE)
INTERVAL (NUMTOYMINTERVAL(1,'MONTH')) 
(PARTITION P_FIRST VALUES LESS THAN (DATE'1900-01-01'));

COMMENT ON TABLE RATING_PASSENGER2DRIVER IS 'Таблица оценок водителей пассажирами';
COMMENT ON COLUMN RATING_PASSENGER2DRIVER.ID IS 'ИД записи Таблица оценок водителей пассажирами';
COMMENT ON COLUMN RATING_PASSENGER2DRIVER.PASSENGER_ID IS 'ИД пассажира';
COMMENT ON COLUMN RATING_PASSENGER2DRIVER.DRIVER_ID IS 'ИД водителя';
COMMENT ON COLUMN RATING_PASSENGER2DRIVER.BOOKING_ID IS 'ИД поездки, за которую установлена оценка';
COMMENT ON COLUMN RATING_PASSENGER2DRIVER.RATING IS 'Оценка';
COMMENT ON COLUMN RATING_PASSENGER2DRIVER.TIME_CREATE IS 'Время добавления оценки';
--*******************************
-- добавлен справочник статусов заказов
CREATE TABLE BOOKING_STATUS(
  ID NUMBER GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1) NOT NULL,
  BRIEF VARCHAR2(128),
  NAME VARCHAR2(255),
  CONSTRAINT PK_BOOKING_STATUS_ID PRIMARY KEY (ID),
  CONSTRAINT UK_BOOKING_STATUS_BRIEF UNIQUE(BRIEF),
  CONSTRAINT CH_BOOKING_STATUS_BRIEF_ENGLISH CHECK (REGEXP_LIKE(BRIEF,'^[0-9A-Z_.]+$')),
  CONSTRAINT CH_BOOKING_STATUS_BRIEF_UPPER CHECK (BRIEF = UPPER(BRIEF))
);
COMMENT ON TABLE BOOKING_STATUS IS 'Справочник статусов поездок';
COMMENT ON COLUMN BOOKING_STATUS.ID IS 'ИД записи Справочник статусов поездок';
COMMENT ON COLUMN BOOKING_STATUS.BRIEF IS 'Английское обозначение статуса';
COMMENT ON COLUMN BOOKING_STATUS.NAME IS 'Описание статуса';
--*******************************
CREATE TABLE BOOKING(
  ID NUMBER GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1) NOT NULL,
  PASSENGER_ID NUMBER NOT NULL,
  DRIVER_ID NUMBER,
  TIME_END TIMESTAMP,
  BOOKING_STATUS_ID NUMBER NOT NULL,
  PAYMENT_ID NUMBER NOT NULL,
  END_TRIP_ADDRESS_ID NUMBER,
  AVERAGE_DRIVER_SPEED NUMBER,
  TIME_CREATE TIMESTAMP NOT NULL,
  CONSTRAINT PK_BOOKING_ID PRIMARY KEY (ID)
)
PARTITION BY RANGE (TIME_CREATE)
INTERVAL (NUMTOYMINTERVAL(1,'MONTH')) 
(PARTITION P_FIRST VALUES LESS THAN (DATE'1900-01-01'));

COMMENT ON TABLE BOOKING IS 'Таблица бронирований поездок';
COMMENT ON COLUMN BOOKING.ID IS 'ИД записи Таблица бронирований поездок';
COMMENT ON COLUMN BOOKING.PASSENGER_ID IS 'ИД пассажира';
COMMENT ON COLUMN BOOKING.DRIVER_ID IS 'ИД водителя';
COMMENT ON COLUMN BOOKING.TIME_END IS 'Дата и время окончания поездки';
COMMENT ON COLUMN BOOKING.BOOKING_STATUS_ID IS 'ИД статуса поездки';
COMMENT ON COLUMN BOOKING.PAYMENT_ID IS 'ИД платежа за поездку';
COMMENT ON COLUMN BOOKING.END_TRIP_ADDRESS_ID IS 'ИД адреса конечной точки поездки';
COMMENT ON COLUMN BOOKING.AVERAGE_DRIVER_SPEED IS 'Средняя скорость поездки';
COMMENT ON COLUMN BOOKING.TIME_CREATE IS 'Время создания бронирования';
--*******************************
CREATE TABLE WAY(
  ID NUMBER GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1) NOT NULL,
  FROM_ADDRESS_ID NUMBER NOT NULL,
  TO_ADDRESS_ID NUMBER NOT NULL,
  DISTANCE NUMBER NOT NULL,
  BOOKING_ID NUMBER NOT NULL,
  PREVIEW_WAY_ID NUMBER,
  TIME_CREATE TIMESTAMP NOT NULL,
  CONSTRAINT PK_WAY_ID PRIMARY KEY (ID)
)
PARTITION BY RANGE (TIME_CREATE)
INTERVAL (NUMTOYMINTERVAL(1,'MONTH')) 
(PARTITION P_FIRST VALUES LESS THAN (DATE'1900-01-01'));

COMMENT ON TABLE WAY IS 'Таблица маршрутов поездок';
COMMENT ON COLUMN WAY.ID IS 'ИД записи Таблица маршрутов поездок';
COMMENT ON COLUMN WAY.FROM_ADDRESS_ID IS 'ИД адреса откуда начинается путь';
COMMENT ON COLUMN WAY.TO_ADDRESS_ID IS 'ИД адреса куда назначен путь';
COMMENT ON COLUMN WAY.DISTANCE IS 'Итоговая дистанция обозначенного пути';
COMMENT ON COLUMN WAY.BOOKING_ID IS 'ИД бронирования поездки';
COMMENT ON COLUMN WAY.PREVIEW_WAY_ID IS 'ИД предыдущего маршрута поездки (для нескольких точек остановки)';
COMMENT ON COLUMN WAY.TIME_CREATE IS 'Дата создания записи о маршруте';
--*******************************
CREATE TABLE PASSENGER_IMAGE(
  PASSENGER_ID NUMBER NOT NULL,
  IMAGE BLOB,
  TIME_CREATE TIMESTAMP NOT NULL,
  CONSTRAINT PK_PASSENGER_IMAGE_PASSENGER_ID PRIMARY KEY (PASSENGER_ID)
);
COMMENT ON TABLE PASSENGER_IMAGE IS 'Таблица фото пассажиров';
COMMENT ON COLUMN PASSENGER_IMAGE.PASSENGER_ID IS 'ИД пассажира';
COMMENT ON COLUMN PASSENGER_IMAGE.IMAGE IS 'Фото в формате base64';
COMMENT ON COLUMN PASSENGER_IMAGE.TIME_CREATE IS 'Дата добавления фото';
--*******************************
CREATE TABLE PASSENGER_RATING(
  PASSENGER_ID NUMBER NOT NULL,
  RATING  NUMBER,
  TIME_CREATE TIMESTAMP NOT NULL,
  CONSTRAINT PK_PASSENGER_RATING_PASSENGER_ID PRIMARY KEY (PASSENGER_ID),
  CONSTRAINT CH_PASSENGER_RATING_BETWEEN CHECK (RATING BETWEEN 1 AND 5)
);
COMMENT ON TABLE PASSENGER_RATING IS 'Таблица рейтинга пассажиров';
COMMENT ON COLUMN PASSENGER_RATING.PASSENGER_ID IS 'ИД Пассажира';
COMMENT ON COLUMN PASSENGER_RATING.RATING IS 'Средняя оценка';
COMMENT ON COLUMN PASSENGER_RATING.TIME_CREATE IS 'Дата создания записи';
--*******************************
CREATE TABLE PASSENGER(
  ID NUMBER GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1) NOT NULL,
  IS_ANONYMOUS NUMBER NOT NULL,
  NAME VARCHAR2(255),
  AGE NUMBER,
  HOME_ADDRESS_ID NUMBER,
  PHONE_NUMBER VARCHAR2(50) NOT NULL,
  IS_MALE NUMBER,
  TIME_CREATE TIMESTAMP NOT NULL,
  CONSTRAINT PK_PASSENGER_ID PRIMARY KEY (ID),
  CONSTRAINT CH_PASSENGER_IS_ANONYMOUS_BOOL CHECK (IS_ANONYMOUS IN (0,1)),
  CONSTRAINT CH_PASSENGER_IS_MALE_BOOL CHECK (IS_MALE IN (0,1,NULL))
);
COMMENT ON TABLE PASSENGER IS 'Таблица Пассажиров';
COMMENT ON COLUMN PASSENGER.ID IS 'ИД записи Таблица Пассажиров';
COMMENT ON COLUMN PASSENGER.IS_ANONYMOUS IS 'Анонимность (0-нет, 1-да)';
COMMENT ON COLUMN PASSENGER.NAME IS 'ФИО пассажира';
COMMENT ON COLUMN PASSENGER.AGE IS 'Возраст';
COMMENT ON COLUMN PASSENGER.HOME_ADDRESS_ID IS 'ИД домашнего адреса';
COMMENT ON COLUMN PASSENGER.PHONE_NUMBER IS 'Номер телефона';
COMMENT ON COLUMN PASSENGER.IS_MALE IS 'Является ли мужчиной (0-нет, 1-да)';
COMMENT ON COLUMN PASSENGER.TIME_CREATE IS 'Дата создания пассажира';
--*******************************
CREATE TABLE ADDRESS(
  ID NUMBER GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1) NOT NULL,
  HOUSE_NUMBER NUMBER NOT NULL,
  STREET_ID NUMBER NOT NULL,
  TIME_CREATE TIMESTAMP NOT NULL,
  CONSTRAINT PK_ADDRESS_ID PRIMARY KEY (ID)
);
COMMENT ON TABLE ADDRESS IS 'Таблица Адресов';
COMMENT ON COLUMN ADDRESS.ID IS 'ИД записи Таблица Адресов';
COMMENT ON COLUMN ADDRESS.HOUSE_NUMBER IS 'Номер дома';
COMMENT ON COLUMN ADDRESS.STREET_ID IS 'ИД улицы';
COMMENT ON COLUMN ADDRESS.TIME_CREATE IS 'Дата добавления записи';
--*******************************
CREATE TABLE STREET(
  ID NUMBER GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1) NOT NULL,
  NAME VARCHAR2(255) NOT NULL,
  CITY_ID NUMBER NOT NULL,
  TIME_CREATE TIMESTAMP NOT NULL,
  CONSTRAINT PK_STREET_ID PRIMARY KEY (ID)
);
COMMENT ON TABLE STREET IS 'Таблица улиц';
COMMENT ON COLUMN STREET.ID IS 'ИД записи Таблица улиц';
COMMENT ON COLUMN STREET.NAME IS 'Название';
COMMENT ON COLUMN STREET.CITY_ID IS 'ИД города';
COMMENT ON COLUMN STREET.TIME_CREATE IS 'Дата добавления улицы';
--*******************************
CREATE TABLE CITY(
  ID NUMBER GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1) NOT NULL,
  NAME VARCHAR2(255) NOT NULL,
  COUNTRY_ID NUMBER NOT NULL,
  TIME_CREATE TIMESTAMP NOT NULL,
  CONSTRAINT PK_CITY_ID PRIMARY KEY (ID)
);
COMMENT ON TABLE CITY IS 'Таблица городов';
COMMENT ON COLUMN CITY.ID IS 'ИД записи Таблица городов';
COMMENT ON COLUMN CITY.NAME IS 'Наименование города';
COMMENT ON COLUMN CITY.COUNTRY_ID IS 'ИД страны';
COMMENT ON COLUMN CITY.TIME_CREATE IS 'Дата добавления города';
--*******************************
CREATE TABLE COUNTRY(
  ID NUMBER GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1) NOT NULL,
  NAME VARCHAR2(255) NOT NULL,
  TIME_CREATE TIMESTAMP NOT NULL,
  CONSTRAINT PK_COUNTRY_ID PRIMARY KEY (ID)
);
COMMENT ON TABLE COUNTRY IS 'Таблица стран';
COMMENT ON COLUMN COUNTRY.ID IS 'ИД записи Таблица стран';
COMMENT ON COLUMN COUNTRY.NAME IS 'Наименование страны';
COMMENT ON COLUMN COUNTRY.TIME_CREATE IS 'Дата добавления страны';
--*******************************
CREATE TABLE CURRENCY(
  ID NUMBER GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1) NOT NULL,
  NAME VARCHAR2(50) NOT NULL,
  ABBREVIATION VARCHAR2(8) NOT NULL,
  TIME_CREATE TIMESTAMP NOT NULL,
  CONSTRAINT PK_CURRENCY_ID PRIMARY KEY (ID)
);
COMMENT ON TABLE CURRENCY IS 'Справочник валют';
COMMENT ON COLUMN CURRENCY.ID IS 'ИД записи Справочник валют';
COMMENT ON COLUMN CURRENCY.NAME IS 'Наименование валюты';
COMMENT ON COLUMN CURRENCY.ABBREVIATION IS 'Сокращенное наименование';
COMMENT ON COLUMN CURRENCY.TIME_CREATE IS 'Дата добавления записи';
--*******************************
CREATE TABLE CURRENCY2COUNTRY(
  CURRENCY_ID NUMBER NOT NULL,
  COUNTRY_ID NUMBER NOT NULL,
  TIME_CREATE TIMESTAMP NOT NULL
);
COMMENT ON TABLE CURRENCY2COUNTRY IS 'Таблица валют в стране';
COMMENT ON COLUMN CURRENCY2COUNTRY.CURRENCY_ID IS 'ИД валюты';
COMMENT ON COLUMN CURRENCY2COUNTRY.COUNTRY_ID IS 'ИД страны';
COMMENT ON COLUMN CURRENCY2COUNTRY.TIME_CREATE IS 'Дата добавления записи';
--*******************************
CREATE TABLE RATE(
  ID NUMBER GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1) NOT NULL,
  CURRENCY1_ID NUMBER NOT NULL,
  CURRENCY2_ID NUMBER NOT NULL,
  RATE NUMBER NOT NULL,
  TIME_CREATE TIMESTAMP NOT NULL,
  CONSTRAINT PK_RATE_ID PRIMARY KEY (ID)
)
PARTITION BY RANGE (TIME_CREATE)
INTERVAL (NUMTOYMINTERVAL(1,'MONTH')) 
(PARTITION P_FIRST VALUES LESS THAN (DATE'1900-01-01'));

COMMENT ON TABLE RATE IS 'Таблица валютных конвертаций';
COMMENT ON COLUMN RATE.ID IS 'ИД записи Таблица валютных конвертаций';
COMMENT ON COLUMN RATE.CURRENCY1_ID IS 'Валюта из которой конвертируем';
COMMENT ON COLUMN RATE.CURRENCY2_ID IS 'Валюта в которую конвертируем';
COMMENT ON COLUMN RATE.RATE IS 'Курс валюты в которую конвертируем';
COMMENT ON COLUMN RATE.TIME_CREATE IS 'Дата добавления записи';
--*******************************
-- добавлен справочник типов платежей
CREATE TABLE PAYMENT_TYPE(
  ID NUMBER GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1) NOT NULL,
  BRIEF VARCHAR2(128),
  NAME VARCHAR2(255),
  CONSTRAINT PK_PAYMENT_TYPE_ID PRIMARY KEY (ID),
  CONSTRAINT UK_PAYMENT_TYPE_BRIEF UNIQUE(BRIEF),
  CONSTRAINT CH_PAYMENT_TYPE_BRIEF_ENGLISH CHECK (REGEXP_LIKE(BRIEF,'^[0-9A-Z_.]+$')),
  CONSTRAINT CH_PAYMENT_TYPE_BRIEF_UPPER CHECK (BRIEF = UPPER(BRIEF))
);
COMMENT ON TABLE PAYMENT_TYPE IS 'Справочник типов платежей';
COMMENT ON COLUMN PAYMENT_TYPE.ID IS 'ИД записи Справочник типов платежей';
COMMENT ON COLUMN PAYMENT_TYPE.BRIEF IS 'Англоязычное наименование типа платежа';
COMMENT ON COLUMN PAYMENT_TYPE.NAME IS 'Наименование типа платежа';
--*******************************
CREATE TABLE PAYMENT(
  ID NUMBER GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1) NOT NULL,
  AMOUNT_TO_PAID NUMBER NOT NULL,
  CURRENCY_ID NUMBER NOT NULL,
  PAYMENT_TYPE_ID NUMBER NOT NULL,
  TIME_CREATE TIMESTAMP NOT NULL,
  CONSTRAINT PK_PAYMENT_ID PRIMARY KEY (ID)
);
COMMENT ON TABLE PAYMENT IS 'Таблица платежей';
COMMENT ON COLUMN PAYMENT.ID IS 'ИД записи Таблица платежей';
COMMENT ON COLUMN PAYMENT.AMOUNT_TO_PAID IS 'Сумма платежа';
COMMENT ON COLUMN PAYMENT.CURRENCY_ID IS 'Валюта оплаты';
COMMENT ON COLUMN PAYMENT.PAYMENT_TYPE_ID IS 'Тип платежа';
COMMENT ON COLUMN PAYMENT.TIME_CREATE IS 'Дата создания записи';
--*******************************
CREATE TABLE RATING_DRIVER2PASSENGER(
  ID NUMBER GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1) NOT NULL,
  PASSENGER_ID NUMBER NOT NULL,
  DRIVER_ID NUMBER NOT NULL,
  BOOKING_ID NUMBER NOT NULL,
  RATING NUMBER,
  TIME_CREATE TIMESTAMP NOT NULL,
  CONSTRAINT PK_RATING_DRIVER2PASSENGER_ID PRIMARY KEY (ID),
  CONSTRAINT CH_RATING_DRIVER2PASSENGER_RATING CHECK (RATING BETWEEN 1 AND 5)
)
PARTITION BY RANGE (TIME_CREATE)
INTERVAL (NUMTOYMINTERVAL(1,'MONTH')) 
(PARTITION P_FIRST VALUES LESS THAN (DATE'1900-01-01'));

COMMENT ON TABLE RATING_DRIVER2PASSENGER IS 'Таблица оценок пассажиров водителями';
COMMENT ON COLUMN RATING_DRIVER2PASSENGER.ID IS 'ИД записи Таблица оценок пассажиров водителями';
COMMENT ON COLUMN RATING_DRIVER2PASSENGER.PASSENGER_ID IS 'ИД пассажира';
COMMENT ON COLUMN RATING_DRIVER2PASSENGER.DRIVER_ID IS 'ИД водителя';
COMMENT ON COLUMN RATING_DRIVER2PASSENGER.BOOKING_ID IS 'ИД бронирования поездки за которую выставлена оценка';
COMMENT ON COLUMN RATING_DRIVER2PASSENGER.RATING IS 'Оценка';
COMMENT ON COLUMN RATING_DRIVER2PASSENGER.TIME_CREATE IS 'Дата добавления записи';
--*******************************
CREATE TABLE DRIVER(
  ID NUMBER GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1) NOT NULL,
  NAME VARCHAR2(255) NOT NULL,
  AGE NUMBER NOT NULL,
  PHONE_NUMBER VARCHAR2(50) NOT NULL,
  PERCENT_OF_PAYMENT NUMBER NOT NULL,
  REGISTRATION_DATE DATE NOT NULL,
  TIME_CREATE TIMESTAMP NOT NULL,
  CONSTRAINT PK_DRIVER_ID PRIMARY KEY (ID)
);
COMMENT ON TABLE DRIVER IS 'Таблица водителей';
COMMENT ON COLUMN DRIVER.ID IS 'ИД записи Таблица водителей';
COMMENT ON COLUMN DRIVER.NAME IS 'ФИО водителя';
COMMENT ON COLUMN DRIVER.AGE IS 'Возраст';
COMMENT ON COLUMN DRIVER.PHONE_NUMBER IS 'Номер телефона';
COMMENT ON COLUMN DRIVER.PERCENT_OF_PAYMENT IS 'Процент от продаж';
COMMENT ON COLUMN DRIVER.REGISTRATION_DATE IS 'Дата регистрации в сервисе';
COMMENT ON COLUMN DRIVER.TIME_CREATE IS 'Дата добавления записи';
--*******************************
CREATE TABLE REFUELING(
  ID NUMBER GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1) NOT NULL,
  DRIVER_ID NUMBER NOT NULL,
  CAR_ID NUMBER NOT NULL,
  PAYMENT_ID NUMBER NOT NULL,
  AMOUNT_OF_GASOLINE NUMBER NOT NULL,
  ADDRESS_ID NUMBER NOT NULL,
  TIME_CREATE TIMESTAMP NOT NULL,
  CONSTRAINT PK_REFUELING_ID PRIMARY KEY (ID)
);
COMMENT ON TABLE REFUELING IS 'Таблица заправок автомобилей';
COMMENT ON COLUMN REFUELING.ID IS 'ИД записи Таблица заправок автомобилей';
COMMENT ON COLUMN REFUELING.DRIVER_ID IS 'ИД водителя';
COMMENT ON COLUMN REFUELING.CAR_ID IS 'ИД автомобиля';
COMMENT ON COLUMN REFUELING.PAYMENT_ID IS 'ИД платежа';
COMMENT ON COLUMN REFUELING.AMOUNT_OF_GASOLINE IS 'Кол-во топлива';
COMMENT ON COLUMN REFUELING.ADDRESS_ID IS 'Адрес заправки';
COMMENT ON COLUMN REFUELING.TIME_CREATE IS 'Дата добавления записи';
--*******************************
CREATE TABLE PARKING(
  ID NUMBER GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1) NOT NULL,
  PARKING_NUMBER NUMBER NOT NULL,
  ADDRESS_ID NUMBER NOT NULL,
  TIME_CREATE TIMESTAMP NOT NULL,
  CONSTRAINT PK_PARKING_ID PRIMARY KEY (ID),
  CONSTRAINT UK_PARKING_NUMBER_ADDRESS_ID UNIQUE (PARKING_NUMBER,ADDRESS_ID)
);
COMMENT ON TABLE PARKING IS 'Таблица парковок';
COMMENT ON COLUMN PARKING.ID IS 'ИД записи Таблица парковок';
COMMENT ON COLUMN PARKING.PARKING_NUMBER IS 'Номер парковочного места';
COMMENT ON COLUMN PARKING.ADDRESS_ID IS 'Адрес парковки';
COMMENT ON COLUMN PARKING.TIME_CREATE IS 'Дата добавления записи';
--*******************************
CREATE TABLE DRIVER_IMAGE(
  DRIVER_ID NUMBER NOT NULL,
  IMAGE BLOB,
  TIME_CREATE TIMESTAMP NOT NULL,
  CONSTRAINT PK_DRIVER_IMAGE_DRIVER_ID PRIMARY KEY (DRIVER_ID)
);
COMMENT ON TABLE DRIVER_IMAGE IS 'Таблица фото водителей';
COMMENT ON COLUMN DRIVER_IMAGE.DRIVER_ID IS 'ИД водителя';
COMMENT ON COLUMN DRIVER_IMAGE.IMAGE IS 'Фото в формате base64';
COMMENT ON COLUMN DRIVER_IMAGE.TIME_CREATE IS 'Дата добавления записи';
--*******************************
CREATE TABLE DRIVER_RATING(
  DRIVER_ID NUMBER NOT NULL,
  RATING NUMBER,
  TIME_CREATE TIMESTAMP NOT NULL,
  CONSTRAINT PK_DRIVER_RATING_DRIVER_ID PRIMARY KEY (DRIVER_ID),
  CONSTRAINT CH_DRIVER_RATING_BETWEEN CHECK (RATING BETWEEN 1 AND 5)
);
COMMENT ON TABLE DRIVER_RATING IS 'Таблица рейтинга водителей';
COMMENT ON COLUMN DRIVER_RATING.DRIVER_ID IS 'ИД водителя';
COMMENT ON COLUMN DRIVER_RATING.RATING IS 'Средняя оценка';
COMMENT ON COLUMN DRIVER_RATING.TIME_CREATE IS 'Дата добавления записи';
--*******************************
CREATE TABLE RENT(
  ID NUMBER GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1) NOT NULL,
  DRIVER_ID NUMBER NOT NULL,
  CAR_ID NUMBER NOT NULL,
  DATE_START DATE,
  DATE_STOP DATE,
  GAS_MILEAGE NUMBER,
  DISTANCE NUMBER,
  TIME_CREATE TIMESTAMP NOT NULL,
  CONSTRAINT PK_RENT_ID PRIMARY KEY (ID)
);
COMMENT ON TABLE RENT IS 'Таблица аренды автомобилей';
COMMENT ON COLUMN RENT.ID IS 'ИД записи Таблица аренды автомобилей';
COMMENT ON COLUMN RENT.DRIVER_ID IS 'ИД арендующего водителя';
COMMENT ON COLUMN RENT.CAR_ID IS 'ИД арендованного автомобиля';
COMMENT ON COLUMN RENT.DATE_START IS 'Дата начала аренды';
COMMENT ON COLUMN RENT.DATE_STOP IS 'Дата окончания аренды';
COMMENT ON COLUMN RENT.GAS_MILEAGE IS 'Кол-во затраченного бензина';
COMMENT ON COLUMN RENT.DISTANCE IS 'Пройденная дистанция';
COMMENT ON COLUMN RENT.TIME_CREATE IS 'Дата добавления записи';
--*******************************
-- добавлен справочник цветов автомобилей
CREATE TABLE CAR_COLOR(
  ID NUMBER GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1) NOT NULL,
  BRIEF VARCHAR2(128),
  NAME VARCHAR2(255),
  CONSTRAINT PK_CAR_COLOR_ID PRIMARY KEY (ID),
  CONSTRAINT UK_CAR_COLOR_BRIEF UNIQUE(BRIEF),
  CONSTRAINT CH_CAR_COLOR_BRIEF_UPPER CHECK (BRIEF = UPPER(BRIEF)),
  CONSTRAINT CH_CAR_COLOR_BRIEF_ENGLISH CHECK (REGEXP_LIKE(BRIEF,'^[0-9A-Z_.]+$'))
);
COMMENT ON TABLE CAR_COLOR IS 'Таблица цветов автомобилей';
COMMENT ON COLUMN CAR_COLOR.ID IS 'ИД записи Таблица цветов автомобилей';
COMMENT ON COLUMN CAR_COLOR.BRIEF IS 'Англоязычное наименование цвета';
COMMENT ON COLUMN CAR_COLOR.NAME IS 'Наименование цвета';
--*******************************
CREATE TABLE CAR(
  ID NUMBER GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1) NOT NULL,
  BRAND VARCHAR2(50) NOT NULL,
  MODEL VARCHAR2(50) NOT NULL,
  CAR_COLOR_ID NUMBER NOT NULL,
  IS_RESERVED NUMBER NOT NULL,
  STATE_NUMBER VARCHAR2(50) NOT NULL,
  PARKING_ID NUMBER NOT NULL,
  MILEAGE NUMBER NOT NULL,
  TIME_CREATE TIMESTAMP NOT NULL,
  CONSTRAINT PK_CAR_ID PRIMARY KEY (ID),
  CONSTRAINT CH_CAR_IS_RESERVED CHECK (IS_RESERVED IN (0,1)),
  CONSTRAINT UK_CAR_STATE_NUMBER UNIQUE (STATE_NUMBER)
);
COMMENT ON TABLE CAR IS 'Таблица автомобилей';
COMMENT ON COLUMN CAR.ID IS 'ИД записи Таблица автомобилей';
COMMENT ON COLUMN CAR.BRAND IS 'Фирма выпустившая автомобиль';
COMMENT ON COLUMN CAR.MODEL IS 'Модель автомобиля';
COMMENT ON COLUMN CAR.CAR_COLOR_ID IS 'ИД цвета автомобиля';
COMMENT ON COLUMN CAR.IS_RESERVED IS 'Признак резервации автомобиля (0-нет,1-да)';
COMMENT ON COLUMN CAR.STATE_NUMBER IS 'Государственный номер';
COMMENT ON COLUMN CAR.PARKING_ID IS 'ИД парковки';
COMMENT ON COLUMN CAR.MILEAGE IS 'Пробег автомобиля';
COMMENT ON COLUMN CAR.TIME_CREATE IS 'Дата добавления записи';
--*******************************



--- RATING_PASSENGER2DRIVER
ALTER TABLE RATING_PASSENGER2DRIVER ADD CONSTRAINT FK_RATING_PASSENGER2DRIVER_PASSENGER FOREIGN KEY (PASSENGER_ID) REFERENCES PASSENGER (ID);
ALTER TABLE RATING_PASSENGER2DRIVER ADD CONSTRAINT FK_RATING_PASSENGER2DRIVER_DRIVER FOREIGN KEY (DRIVER_ID) REFERENCES DRIVER (ID);
ALTER TABLE RATING_PASSENGER2DRIVER ADD CONSTRAINT FK_RATING_PASSENGER2DRIVER_BOOKING FOREIGN KEY (BOOKING_ID) REFERENCES BOOKING (ID);
--- BOOKING
ALTER TABLE BOOKING ADD CONSTRAINT FK_BOOKING_PASSENGER FOREIGN KEY (PASSENGER_ID) REFERENCES PASSENGER (ID);
ALTER TABLE BOOKING ADD CONSTRAINT FK_BOOKING_DRIVER FOREIGN KEY (DRIVER_ID) REFERENCES DRIVER (ID);
ALTER TABLE BOOKING ADD CONSTRAINT FK_BOOKING_PAYMENT FOREIGN KEY (PAYMENT_ID) REFERENCES PAYMENT (ID);
ALTER TABLE BOOKING ADD CONSTRAINT FK_BOOKING_END_TRIP_ADDRESS FOREIGN KEY (END_TRIP_ADDRESS_ID) REFERENCES ADDRESS (ID);
ALTER TABLE BOOKING ADD CONSTRAINT FK_BOOKING_BOOKING_STATUS FOREIGN KEY (BOOKING_STATUS_ID) REFERENCES BOOKING_STATUS (ID);
--- WAY
ALTER TABLE WAY ADD CONSTRAINT FK_WAY_FROM_ADDRESS FOREIGN KEY (FROM_ADDRESS_ID) REFERENCES ADDRESS (ID);------------
ALTER TABLE WAY ADD CONSTRAINT FK_WAY_TO_ADDRESS FOREIGN KEY (TO_ADDRESS_ID) REFERENCES ADDRESS (ID);-----------
ALTER TABLE WAY ADD CONSTRAINT FK_WAY_BOOKING FOREIGN KEY (BOOKING_ID) REFERENCES BOOKING (ID);
ALTER TABLE WAY ADD CONSTRAINT FK_WAY_PREVIEW_WAY FOREIGN KEY (PREVIEW_WAY_ID) REFERENCES WAY (ID);
--- PASSENGER_IMAGE
ALTER TABLE PASSENGER_IMAGE ADD CONSTRAINT FK_PASSENGER_IMAGE_PREVIEW_WAY FOREIGN KEY (PASSENGER_ID) REFERENCES PASSENGER (ID);
--- PASSENGER_RATING
ALTER TABLE PASSENGER_RATING ADD CONSTRAINT FK_PASSENGER_RATING_PREVIEW_WAY FOREIGN KEY (PASSENGER_ID) REFERENCES PASSENGER (ID);
--- PASSENGER
ALTER TABLE PASSENGER ADD CONSTRAINT FK_PASSENGER_ADDRESS FOREIGN KEY (HOME_ADDRESS_ID) REFERENCES ADDRESS (ID);
--- ADDRESS
ALTER TABLE ADDRESS ADD CONSTRAINT FK_ADDRESS_STREET FOREIGN KEY (STREET_ID) REFERENCES STREET (ID);
--- STREET
ALTER TABLE STREET ADD CONSTRAINT FK_STREET_CITY FOREIGN KEY (CITY_ID) REFERENCES CITY (ID);
--- COUNTRY
ALTER TABLE CITY ADD CONSTRAINT FK_CITY_COUNTRY FOREIGN KEY (COUNTRY_ID) REFERENCES COUNTRY (ID);
--- CURRENCY2COUNTRY
ALTER TABLE CURRENCY2COUNTRY ADD CONSTRAINT FK_CURRENCY2COUNTRY_CURRENCY FOREIGN KEY (CURRENCY_ID) REFERENCES CURRENCY (ID);
ALTER TABLE CURRENCY2COUNTRY ADD CONSTRAINT FK_CURRENCY2COUNTRY_COUNTRY FOREIGN KEY (COUNTRY_ID) REFERENCES COUNTRY (ID);
--- RATE
ALTER TABLE RATE ADD CONSTRAINT FK_RATE_CURRENCY1 FOREIGN KEY (CURRENCY1_ID) REFERENCES CURRENCY (ID);
ALTER TABLE RATE ADD CONSTRAINT FK_RATE_CURRENCY2 FOREIGN KEY (CURRENCY2_ID) REFERENCES CURRENCY (ID);
--- RATE
ALTER TABLE PAYMENT ADD CONSTRAINT FK_PAYMENT_PAYMENT_TYPE FOREIGN KEY (PAYMENT_TYPE_ID) REFERENCES PAYMENT_TYPE (ID);
ALTER TABLE PAYMENT ADD CONSTRAINT FK_PAYMENT_CURRENCY FOREIGN KEY (CURRENCY_ID) REFERENCES CURRENCY (ID);
--- RATING_DRIVER2PASSENGER
ALTER TABLE RATING_DRIVER2PASSENGER ADD CONSTRAINT FK_RATING_DRIVER2PASSENGER_PASSENGER FOREIGN KEY (PASSENGER_ID) REFERENCES PASSENGER (ID);
ALTER TABLE RATING_DRIVER2PASSENGER ADD CONSTRAINT FK_RATING_DRIVER2PASSENGER_DRIVER FOREIGN KEY (DRIVER_ID) REFERENCES DRIVER (ID);
ALTER TABLE RATING_DRIVER2PASSENGER ADD CONSTRAINT FK_RATING_DRIVER2PASSENGER_BOOKING FOREIGN KEY (BOOKING_ID) REFERENCES BOOKING (ID);
--- REFUELING
ALTER TABLE REFUELING ADD CONSTRAINT FK_REFUELING_CAR FOREIGN KEY (CAR_ID) REFERENCES CAR (ID);
ALTER TABLE REFUELING ADD CONSTRAINT FK_REFUELING_DRIVER FOREIGN KEY (DRIVER_ID) REFERENCES DRIVER (ID);
ALTER TABLE REFUELING ADD CONSTRAINT FK_REFUELING_PAYMENT FOREIGN KEY (PAYMENT_ID) REFERENCES PAYMENT (ID);
ALTER TABLE REFUELING ADD CONSTRAINT FK_REFUELING_ADDRESS FOREIGN KEY (ADDRESS_ID) REFERENCES ADDRESS (ID);
--- PARKING
ALTER TABLE PARKING ADD CONSTRAINT FK_PARKING_ADDRESS FOREIGN KEY (ADDRESS_ID) REFERENCES ADDRESS (ID);
--- DRIVER_IMAGE
ALTER TABLE DRIVER_IMAGE ADD CONSTRAINT FK_DRIVER_IMAGE_DRIVER FOREIGN KEY (DRIVER_ID) REFERENCES DRIVER (ID);
--- DRIVER_RATING
ALTER TABLE DRIVER_RATING ADD CONSTRAINT FK_DRIVER_RATING_DRIVER FOREIGN KEY (DRIVER_ID) REFERENCES DRIVER (ID);
--- RENT
ALTER TABLE RENT ADD CONSTRAINT FK_RENT_DRIVER FOREIGN KEY (DRIVER_ID) REFERENCES DRIVER (ID);
ALTER TABLE RENT ADD CONSTRAINT FK_RENT_CAR FOREIGN KEY (CAR_ID) REFERENCES CAR (ID);
--- RENT
ALTER TABLE CAR ADD CONSTRAINT FK_CAR_CAR_COLOR FOREIGN KEY (CAR_COLOR_ID) REFERENCES CAR_COLOR (ID);
ALTER TABLE CAR ADD CONSTRAINT FK_CAR_PARKING FOREIGN KEY (PARKING_ID) REFERENCES PARKING (ID);
